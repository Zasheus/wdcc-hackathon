[{"/Users/ericheo/github/website/hackathon/WDCC_HACK/my-app/src/index.js":"1","/Users/ericheo/github/website/hackathon/WDCC_HACK/my-app/src/reportWebVitals.js":"2","/Users/ericheo/github/website/hackathon/WDCC_HACK/my-app/src/App.js":"3","/Users/ericheo/github/website/hackathon/WDCC_HACK/my-app/src/components/Timetable.js":"4","/Users/ericheo/github/website/hackathon/WDCC_HACK/my-app/src/components/AddTaskTab.js":"5","/Users/ericheo/github/website/hackathon/WDCC_HACK/my-app/src/components/SimpleMenu.js":"6","/Users/ericheo/github/website/hackathon/WDCC_HACK/my-app/src/components/TaskInput.js":"7","/Users/ericheo/github/website/hackathon/WDCC_HACK/my-app/src/components/Countdown.js":"8","/Users/ericheo/github/website/hackathon/WDCC_HACK/my-app/src/components/InputAssignment.js":"9","/Users/ericheo/github/website/hackathon/WDCC_HACK/my-app/src/components/GetRemainingTime.js":"10"},{"size":500,"mtime":1627694251638,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1627694251638,"results":"13","hashOfConfig":"12"},{"size":520,"mtime":1627786550228,"results":"14","hashOfConfig":"12"},{"size":4861,"mtime":1627786583304,"results":"15","hashOfConfig":"12"},{"size":387,"mtime":1627786550134,"results":"16","hashOfConfig":"12"},{"size":2272,"mtime":1627786550138,"results":"17","hashOfConfig":"12"},{"size":226,"mtime":1627786550140,"results":"18","hashOfConfig":"12"},{"size":378,"mtime":1627786550135,"results":"19","hashOfConfig":"12"},{"size":1774,"mtime":1627786550137,"results":"20","hashOfConfig":"12"},{"size":1939,"mtime":1627786550136,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17nf9ei",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/Users/ericheo/github/website/hackathon/WDCC_HACK/my-app/src/index.js",[],"/Users/ericheo/github/website/hackathon/WDCC_HACK/my-app/src/reportWebVitals.js",[],"/Users/ericheo/github/website/hackathon/WDCC_HACK/my-app/src/App.js",[],"/Users/ericheo/github/website/hackathon/WDCC_HACK/my-app/src/components/Timetable.js",["44","45","46"],"import FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport axios from 'axios';\nimport moment from 'moment';\nimport React, { Component } from 'react';\n\nexport default class Timetable extends Component{\n    constructor(props) {\n        super(props);\n    \n        this.Timetab = this.Timetab.bind(this);\n        this.generateRandomDistraction = this.generateRandomDistraction.bind(this);\n    \n        this.state = {event:[],\n                    cramday:[],\n                    chillDays:[]};\n      }\n      componentDidMount() {\n        var tasks;\n        var tasksSorted = [];\n        var eventContent = [];\n        axios.get('http://localhost:5000/tasks/')\n        .then(response => {\n            tasks = response.data;\n            var yearWeek;\n            tasks.forEach(function (value,i){\n                yearWeek = `${moment(value.dueTime).year()}-${moment(value.dueTime).isoWeek()}`;\n                if (!tasksSorted[yearWeek]) {\n                    tasksSorted[yearWeek]=[value];\n                }\n                else{\n                    tasksSorted[yearWeek].push(value);\n                }\n            })\n            for(let i in tasksSorted){\n                for(let j in tasksSorted[i]){\n    \n                    eventContent.push({title:tasksSorted[i][j].taskName,start:tasksSorted[i][j].dueTime,durationEditable:'true'})\n                }\n            }\n            this.setState({event:eventContent});\n\n            var cramEvents = [];\n            for(let i in tasksSorted){\n                var dayInTheWeek = [];\n                for(let j in tasksSorted[i]){\n                    dayInTheWeek.push(moment(tasksSorted[i][j].dueTime));\n                }\n                var startDay = moment.min(dayInTheWeek).format('YYYY-MM-DDT23:59:59');\n                if (moment().isoWeek()==moment(startDay).isoWeek()){\n                    this.setState({cramday:startDay})\n                }\n                for(let j in tasksSorted[i]){\n                    var color = '#FF0000';\n                    if (moment().diff(this.state.cramday,'day')){\n                        color = '#3CB043';\n                    }\n                    var startTime = moment(startDay).subtract(tasksSorted[i][j].timeNeed,'hours').format(\"YYYY-MM-DDTHH:mm:ss\");\n                    cramEvents.push({title:tasksSorted[i][j].taskName,start:startTime,end:startDay,durationEditable:'true',\n                    backgroundColor :color,borderColor:color})\n                    startDay=startTime;\n                }\n            }\n            var thisMonday = moment(this.state.cramday).subtract(moment(this.state.cramday).isoWeekday()-1,'day');\n            var restDays = [];\n            for (let i=0;i<7;i++) {\n                var thisWeekDay=moment(thisMonday).add(i,'day');\n                if(this.state.cramday.length!=0){\n                    if (moment(thisWeekDay).diff(this.state.cramday,'day')){\n                        restDays.push({title:this.generateRandomDistraction(),start:moment(thisWeekDay).format('YYYY-MM-DDT06:00:01'),\n                        end:moment(thisWeekDay).format('YYYY-MM-DDT09:00:00'),durationEditable:'true'})\n                    }\n                }\n                else{\n                    restDays.push({title:this.generateRandomDistraction(),start:moment(thisWeekDay).format('YYYY-MM-DDT06:00:01'),\n                        end:moment(thisWeekDay).format('YYYY-MM-DDT09:00:00'),durationEditable:'true'})\n                }\n            }\n            this.setState({chillDays:restDays});\n            this.setState({event:cramEvents.concat(restDays)});\n            \n        })\n        .catch((error) => {\n          console.log(error);\n        })\n      }\n      generateRandomDistraction(){\n          var distractions = ['browse Facebook','watch Youtube','watch Netflix','browse Twitter','watch Twitch',\n          'play CS go','play Fortnite', 'play League of Legends','play Valorant']\n\n          var getPosition = Math.floor(Math.random() * distractions.length)\n          for(let i = 0; i<distractions.length; i++){\n              if(i == getPosition){\n                  return 'Try: '+distractions[i]\n              }\n          }\n\n          return ('Empty')\n\n      }\n      Timetab() {\n        return(\n            \n            <div className = \"Timetable\">\n                <FullCalendar\n                plugins={[ dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                initialView=\"timeGridWeek\"\n                events={this.state.event}\n                allDaySlot = {false}\n                weekNumberCalculation={'ISO'}\n                />\n            </div>\n            \n        )\n    }\n\n    render() {\n        return<div>\n\n            {this.Timetab()}\n        </div>\n            \n    }\n}\n\n\n","/Users/ericheo/github/website/hackathon/WDCC_HACK/my-app/src/components/AddTaskTab.js",[],"/Users/ericheo/github/website/hackathon/WDCC_HACK/my-app/src/components/SimpleMenu.js",[],"/Users/ericheo/github/website/hackathon/WDCC_HACK/my-app/src/components/TaskInput.js",[],"/Users/ericheo/github/website/hackathon/WDCC_HACK/my-app/src/components/Countdown.js",[],"/Users/ericheo/github/website/hackathon/WDCC_HACK/my-app/src/components/InputAssignment.js",[],"/Users/ericheo/github/website/hackathon/WDCC_HACK/my-app/src/components/GetRemainingTime.js",["47"],"import moment from \"moment\";\nimport axios from \"axios\";\nimport { Component } from \"react\";\n\nexport default class GetRemainingTime extends Component{\n\n    constructor(props){\n        super(props)\n        this.state = {taskString:[]}\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:5000/tasks/')\n            .then(response => {\n                var tasks = response.data;\n\n                // this.setState({taskString:tasks[0].dueTime})\n                for(let i in tasks){\n                    tasks[i].dueTime=moment(tasks[i].dueTime).add(11,'hours')\n                    \n                }\n                for (let i in tasks){\n                    // this.setState({taskString:tasks[i].dueTime})\n\n                    // if( moment().diff(tasks[i].dueTime) < 0){\n                    //     this.setState({taskString:tasks[i].dueTime})\n                    //     alert('Break!')\n                    //     console.log('SOMETHIHGOSDBGS')\n                    // }\n\n                    var thisWeek = []\n                   if(moment(tasks[i].dueTime).isoWeek()==moment().isoWeek())\n                   {\n                    console.log(tasks[i].dueTime)\n                    thisWeek.push(tasks[i].dueTime)\n                    var out = moment.min(thisWeek)\n                    var timeDiff = moment(out).diff(moment(),'seconds')\n                    var outMonth = timeDiff/60/60/24/30\n                   }\n                    // this.setState({taskString:tasks[i].dueTime})\n\n                }\n\n                this.setState({taskString:outMonth.toFixed(3)})\n                // this.setState({taskString:moment().toString()})\n            })\n            // Make an algorithm to find the next upcoming task which is not already happened\n   \n        \n            .catch((error) => {\n                console.log(error)    \n            })\n\n    }\n    \n\n    render() {\n        return <div>{this.state.taskString} months</div>\n    }\n}\n",{"ruleId":"48","severity":1,"message":"49","line":52,"column":39,"nodeType":"50","messageId":"51","endLine":52,"endColumn":41},{"ruleId":"48","severity":1,"message":"52","line":70,"column":45,"nodeType":"50","messageId":"51","endLine":70,"endColumn":47},{"ruleId":"48","severity":1,"message":"49","line":95,"column":20,"nodeType":"50","messageId":"51","endLine":95,"endColumn":22},{"ruleId":"48","severity":1,"message":"49","line":32,"column":57,"nodeType":"50","messageId":"51","endLine":32,"endColumn":59},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='."]